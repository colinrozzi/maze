(testing /course/cs4500f22/ta/github/crozzi-obrienz/8/xbad2)
(testing /course/cs4500f22/ta/github/8/61/Tests/0-in.json /course/cs4500f22/ta/github/8/61/Tests/0-out.json)
(testing /course/cs4500f22/ta/github/8/61/Tests/1-in.json /course/cs4500f22/ta/github/8/61/Tests/1-out.json)
player-info-on-home?: contract violation
  expected: player-info?
  given: #f
  in: the 1st argument of
      (-> player-info? boolean?)
  contract from: 
      /course/cs4500f22/ta/github/crozzi-obrienz/Maze/Common/player-info.rkt
  blaming: /course/cs4500f22/ta/github/crozzi-obrienz/Maze/Common/state.rkt
   (assuming the contract is correct)
  at: /course/cs4500f22/ta/github/crozzi-obrienz/Maze/Common/player-info.rkt:33:3
  context...:
   /proj/racket/plt-released/recent/collects/racket/contract/private/blame.rkt:346:0: raise-blame-error
   /proj/racket/plt-released/recent/collects/racket/contract/private/arrow-val-first.rkt:486:18
   [repeats 1 more time]
   /course/cs4500f22/ta/github/crozzi-obrienz/Maze/Referee/referee.rkt:85:0: run-round
   /course/cs4500f22/ta/github/crozzi-obrienz/Maze/Referee/referee.rkt:68:0: play-until-completion-help
   /course/cs4500f22/ta/github/crozzi-obrienz/Maze/Referee/referee.rkt:39:0: run-game
   /proj/racket/plt-released/recent/collects/racket/contract/private/arrow-val-first.rkt:486:18
   body of (submod "/course/cs4500f22/ta/github/crozzi-obrienz/8/xbad2" main)
---------------------------------
(*** score 0)
(*** on)
'((("a1ic3" "Riemann" "takeTurn" 2)
   ("Bob2121" "Euclid" "takeTurn")
   ("xxxxxxCharx1esxxxxxx" "Euclid" "win" 1)
   ("pLaYeR4" "Riemann" "setUp"))
  #hasheq((board
           .
           #hasheq((connectors
                    .
                    (("┌" "─" "┌" "─")
                     ("┌" "─" "┌" "─")
                     ("┌" "─" "┌" "─")
                     ("┌" "─" "┌" "─")
                     ("┌" "─" "┌" "─")))
                   (treasures
                    .
                    ((("alexandrite-pear-shape" "alexandrite")
                      ("alexandrite-pear-shape" "almandine-garnet")
                      ("alexandrite-pear-shape" "amethyst")
                      ("alexandrite-pear-shape" "ametrine"))
                     (("alexandrite-pear-shape" "apricot-square-radiant")
                      ("alexandrite-pear-shape" "aquamarine")
                      ("alexandrite-pear-shape" "australian-marquise")
                      ("alexandrite-pear-shape" "aventurine"))
                     (("alexandrite-pear-shape" "black-onyx")
                      ("alexandrite-pear-shape" "black-spinel-cushion")
                      ("alexandrite-pear-shape" "blue-ceylon-sapphire")
                      ("alexandrite-pear-shape" "blue-cushion"))
                     (("alexandrite-pear-shape" "carnelian")
                      ("alexandrite-pear-shape" "chrome-diopside")
                      ("alexandrite-pear-shape" "chrysoberyl-cushion")
                      ("alexandrite-pear-shape" "chrysolite"))
                     (("alexandrite-pear-shape" "color-change-oval")
                      ("alexandrite-pear-shape" "cordierite")
                      ("alexandrite-pear-shape" "diamond")
                      ("alexandrite-pear-shape" "dumortierite"))))))
          (last . (4 "UP"))
          (plmt
           .
           (#hasheq((color . "orange")
                    (current . #hasheq((column# . 2) (row# . 1)))
                    (goto . #hasheq((column# . 3) (row# . 1)))
                    (home . #hasheq((column# . 1) (row# . 1))))
            #hasheq((color . "1AD3C2")
                    (current . #hasheq((column# . 0) (row# . 0)))
                    (goto . #hasheq((column# . 1) (row# . 3)))
                    (home . #hasheq((column# . 3) (row# . 1))))
            #hasheq((color . "red")
                    (current . #hasheq((column# . 1) (row# . 3)))
                    (goto . #hasheq((column# . 3) (row# . 3)))
                    (home . #hasheq((column# . 1) (row# . 3))))
            #hasheq((color . "333ABC")
                    (current . #hasheq((column# . 4) (row# . 4)))
                    (goto . #hasheq((column# . 1) (row# . 1)))
                    (home . #hasheq((column# . 3) (row# . 3))))))
          (spare
           .
           #hasheq((1-image . "super-seven")
                   (2-image . "white-square")
                   (tilekey . "┌")))))
(*** expected)
'((() ("Bob2121" "a1ic3" "pLaYeR4" "xxxxxxCharx1esxxxxxx")))
(*** but received)
'(((plain fast with-newline plain-unicode) ()))


(testing /course/cs4500f22/ta/github/8/61/Tests/2-in.json /course/cs4500f22/ta/github/8/61/Tests/2-out.json)
(testing /course/cs4500f22/ta/github/8/61/Tests/3-in.json /course/cs4500f22/ta/github/8/61/Tests/3-out.json)
(testing /course/cs4500f22/ta/github/8/61/Tests/4-in.json /course/cs4500f22/ta/github/8/61/Tests/4-out.json)
((/course/cs4500f22/ta/github/8/61/Tests/0-in.json /course/cs4500f22/ta/github/8/61/Tests/0-out.json) (/course/cs4500f22/ta/github/8/61/Tests/2-in.json /course/cs4500f22/ta/github/8/61/Tests/2-out.json) (/course/cs4500f22/ta/github/8/61/Tests/3-in.json /course/cs4500f22/ta/github/8/61/Tests/3-out.json) (/course/cs4500f22/ta/github/8/61/Tests/4-in.json /course/cs4500f22/ta/github/8/61/Tests/4-out.json))
((passed 4) (total 5) (partial-score 4))

